name: CI Build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      is_deployment_target: ${{ steps.check_deployment_target.is_deployment_target }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4 
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 11
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3  
    # - name: Execute Gradle Build
    #   run: ./gradlew build
    # - name: Copy monolith
    #   run: cp $(cat ./build/path.txt) ./packer/monolith.jar
    # - name: Upload Jar file
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: jar-file
    #     path: ./packer/monolith.jar
    - name: Check whether deployed branch or not
      id: check_deployment_target
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "is_deployment_target=true" >> $GITHUB_OUTPUT
        else
          echo "is_deployment_target=false" >> $GITHUB_OUTPUT
        fi

  validate-packer:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    # - name: Checkout Artifact
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: jar-file
    #     path: ./packer
    # - name: Setup Packer
    #   uses: hashicorp/setup-packer@main
    #   with:
    #     version: latest
    # - name: Run `packer init`
    #   working-directory: packer
    #   run: packer init .
    # - name: Run `packer validate`
    #   id: validate
    #   working-directory: packer
    #   run: packer validate ./packer.pkr.hcl
      
  build-ami:
    # if: github.ref == 'refs/heads/main'
    needs:
    - build
    - validate-packer
    strategy:
      fail-fast: true       # This prevents the cancellation of all matrix jobs if one fails (default, true)
      # max-parallel: 2     # Set the maximum number of jobs that can run simultaneously
      matrix:
        target:
          - 'prod'
          - 'staging'
    uses: ./.github/workflows/build-ami.yaml
    with:
      environment: ${{ matrix.target }}
      lock_option: ${{ needs.build.outputs.is_deployment_target }}
    secrets: inherit
